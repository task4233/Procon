#include <bits/stdc++.h>
using namespace std;

// dp[k][S] := k番目までの要素を見て, 使用できない品物の集合がSの時の価値の最大値
// k番目までの要素で高橋くんが使用できる金額は一意に定まり, そこで得られる価値も一意に定まる
// -> dpテーブルの初期化が行える
// 遷移
// 使用できない品物は増やせる
// (上で初期化したものが最も効率の良い撮り方なので)
// これはその場の最適を選んだものなので, 最適かはわからない
// dp[k][S | (1<<t)] = max_{t !\in S}(dp[k][S | (1<<t)], dp[k][S])
// 終了条件を加味した条件を取るために, 再帰的に呼び出す(ゲームなので)
// ki: 高橋君が売った個数(k),  p:(false:高橋君, true:青木君), S: 使用できない品物の集合 
// ki >= N: return 0;
// 
// 0:Takahashi
//   res = max(rec(ki+1, !p, S), dp[k][S]);
// 1:
//   res = min_{t !\in S} rec(ki+1, !p, S|(1<<t)


int main() {
	int n; cin >> n;
	
  return 0;
}
